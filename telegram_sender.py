#–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ Telegram
import requests
import json
from config import bot_token, chat_id

def shorten_text(text, max_length=900):
    """
    –°–æ–∫—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç –¥–æ max_length —Å–∏–º–≤–æ–ª–æ–≤, –æ–±—Ä–µ–∑–∞—è –ø–æ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É –ø—Ä–æ–±–µ–ª—É –∏–ª–∏ –∑–Ω–∞–∫—É –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è.
    –î–æ–±–∞–≤–ª—è–µ—Ç –º–Ω–æ–≥–æ—Ç–æ—á–∏–µ –≤ –∫–æ–Ω—Ü–µ, –µ—Å–ª–∏ —Ç–µ–∫—Å—Ç –±—ã–ª —Å–æ–∫—Ä–∞—â—ë–Ω.
    """
    if len(text) <= max_length:
        return text
    
    # –ò—â–µ–º –±–ª–∏–∂–∞–π—à–∏–π –ø—Ä–æ–±–µ–ª –∏–ª–∏ –∑–Ω–∞–∫ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è –ø–µ—Ä–µ–¥ max_length
    last_space = text.rfind(' ', 0, max_length)
    last_punct = max(text.rfind('.', 0, max_length),
                    text.rfind('!', 0, max_length),
                    text.rfind('?', 0, max_length))
    
    cut_pos = max(last_punct, last_space)
    
    if cut_pos == -1 or cut_pos < max_length * 0.7:  # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –ø–æ–¥—Ö–æ–¥—è—â–µ–µ –º–µ—Å—Ç–æ
        cut_pos = max_length
    
    shortened = text[:cut_pos].strip()
    if not shortened.endswith(('...', '‚Ä¶')):
        shortened += '... \n \n –ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç –≤ –∏—Å—Ç–æ—á–Ω–∏–∫–µ.'
    
    return shortened

def compose_message(post, is_short=False):
    file_note = "\n\nüìé *–í –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º –ø–æ—Å—Ç–µ –ø—Ä–∏–∫—Ä–µ–ø–ª—ë–Ω —Ñ–∞–π–ª.*" if post['has_file'] else ""
    source = f"\n\nüîó [–ò—Å—Ç–æ—á–Ω–∏–∫]({post['link']})"
    
    text = post['text']
    if is_short and len(text) > 300:  # –°–æ–∫—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ç–µ–∫—Å—Ç –¥–ª–∏–Ω–Ω—ã–π
        text = shorten_text(text)
    
    return f"\n{text}{file_note}{source}"

def send_to_telegram(post):
    has_media = bool(post['photo_urls'])
    message = compose_message(post, is_short=has_media)

    if post['photo_urls']:
        media = []

        for i, url in enumerate(post['photo_urls']):
            media_item = {
                'type': 'photo',
                'media': url
            }
            if i == 0:
                media_item['caption'] = message
                media_item['parse_mode'] = 'Markdown'
            media.append(media_item)

        response = requests.post(
            f'https://api.telegram.org/bot{bot_token}/sendMediaGroup',
            data={
                'chat_id': chat_id,
                'media': json.dumps(media)
            }
        )

        if not response.ok:
            print("‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–µ–¥–∏–∞-–≥—Ä—É–ø–ø—ã:", response.text)

    else:
        # –ï—Å–ª–∏ –Ω–µ—Ç —Ñ–æ—Ç–æ ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        response = requests.post(
            f'https://api.telegram.org/bot{bot_token}/sendMessage',
            data={
                'chat_id': chat_id,
                'text': message,
                'parse_mode': 'Markdown'
            }
        )

        if not response.ok:
            print("‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ–∫—Å—Ç–∞:", response.text)